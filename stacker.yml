namespace: ${PROJECT_NAME}
stacker_bucket: stacker-global-util-${EnvironmentName}
sys_path: .

stacks:
  - name: ${ServiceName}-${PROJECT_NAME}-definitions-${VERSION}
    class_path: supernova.blueprints.service_architypeV2.Service
    variables:
      ServiceName: ${ServiceName}
      EcsServiceName: ${ServiceName}-${PROJECT_NAME}-${VERSION}
      Env: ${EnvironmentName}
      NamespaceId: ${xref ${PROJECT_NAME}-serviceNamespace-${VERSION}::NamespaceId}
      InternalDomainSuffix: ${xref ${PROJECT_NAME}-serviceNamespace-${VERSION}::NamespaceName}

      DeployInfo:
        Cluster: ${CLUSTER_NAME}
        Version: ${VERSION}
        ImageUrl: ${envvar IMAGE_URL}
        DesiredCount: ${DesiredCount}
        CloudWatchLog: ${PutLogToCloudWatch}
        BaseImage:
          Java:
            ImageTag:  corretto-8:latest
            ContainerPort: 8900
            Memory: ${ServiceMemory}
            Command:
              - java -jar -XX:+UseG1GC -XX:MaxRAM=${JVMMemory}m -XX:MaxMetaspaceSize=${ServiceMaxMetaspaceSize} -XX:CompressedClassSpaceSize=80m -XX:MaxRAMPercentage=${ServiceMaxRAMPercentage} -XX:MinRAMPercentage=${ServiceMinRAMPercentage} -XX:+HeapDumpOnOutOfMemoryError  -XX:HeapDumpPath=/var/www/webapp/logs -Dserver.port=8800 -Duser.timezone=America/Chicago /var/www/webapp/application.jar
        Environment:
          AWS_REGION: ${ssmstore Region}
          LoggingLevel: ${LoggingLevel}
          SesConfigurationSet: ${SesConfigurationSet}
          SchemaId: ${SchemaId}
          PdfEngineDebug: ${PdfEngineDebug}
          TemplateFileS3Bucket: ${xref global-util-${EnvironmentName}-s3::NORTHSTARTEMPLATEFILEBucketName}
          REDIS_HOST: ${xref core-v5-redis::PrimaryCname}
          VirusScanResultSqs: ${PROJECT_NAME}-${VERSION}-service-antivirus-result
          VirusScanBucket: ${xref utility-s3::ANTIVIRUSFILESTORAGES3BucketBucketName}
          NotificationSnsArn: ${xref global-util-${EnvironmentName}-sns::FileStorageResultArn}
          FileStorageBucket: ${xref utility-s3::FileStorageS3BucketBucketName}
          callbackUrlSuffix: ${esCallbackUrlSuffix}
          StaticResourceS3Bucket: ${xref global-util-${EnvironmentName}-s3::SNCFRONTENDRESOURCEV2BucketName}